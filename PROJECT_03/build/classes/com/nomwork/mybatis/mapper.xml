<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nomwork.mybatis.mapper">

 	<!-- db와 dto의 변수가 이름 다를때 맵핑해주는 기능 -->
 	<!-- USERINFO 테이블과 UserDto 맵핑 -->
	<resultMap type="UserDto" id="userinfo">
		<result property="userno" column="USERNO" />
		<result property="useremail" column="USEREMAIL" />
		<result property="userpw" column="USERPW" />
		<result property="username" column="USERNAME" />
		<result property="usergender" column="USERGENDER" />
		<result property="userenabled" column="USERENABLED" />
		<result property="userrole" column="USERROLE" />
		<result property="userurl" column="USERURL" />
	</resultMap>
	
	<!-- PROJECT 테이블과 ProjectDto 맵핑 -->
	<resultMap type="ProjectDto" id="project">
		<result property="pno" column="PROJECTNO" />
		<result property="pname" column="PROJECTNAME" />
		<result property="purl" column="PROJECTURL" />
	</resultMap>
	
	<!-- PROJECT_CREATE 테이블과 Project_CreateDto 맵핑 -->
	<resultMap type="Project_CreateDto" id="project_create">
		<result property="project_createno" column="PROJECT_CREATENO"/>
		<result property="userno" column="USERNO"/>
		<result property="projectno" column="PROJECTNO"/>
	</resultMap>
	
	<!-- CHHANEL 테이블과 ChannelDto 맵핑 -->
	<resultMap type="ChannelDto" id="channel">
		<result property="cno" column="CHANNELNO"/>
		<result property="cname" column="CHANNELNAME"/>
		<result property="cstatus" column="CHANNELSTATUS"/>
		<result property="ctime" column="CHANNELTIME"/>
	</resultMap>
	
	<!-- CHANNEL_CREATE 테이블과 Channel_CreateDto 맵핑 -->
	<resultMap type="Channel_CreateDto" id="channel_create">
		<result property="c_cno" column="CHANNEL_CREATENO"/>
		<result property="userno" column="USERNO"/>
		<result property="cno" column="CHANNELNO"/>
		<result property="pno" column="PROJECTNO"/>
	</resultMap>
	
	<!-- TEXT 테이블과 TextDto 맵핑 -->
	<resultMap type="TextDto" id="text">
		<result property="tno" column="TEXTNO"/>
		<result property="userno" column="USERNO"/>
		<result property="cno" column="CHANNELNO"/>
		<result property="answersq" column="ANSWERSQ"/>
		<result property="tcontent" column="TEXTCONTENT"/>
		<result property="tip" column="TEXTIP"/>
		<result property="ttime" column="TEXTTIME"/>
		<result property="mno" column="MAPNO"/>
		<result property="fno" column="FILENO"/>
	</resultMap>
	
	<!-- MAPS 테이블과 MapDto 맵핑 -->
	<resultMap type="MapDto" id="map">
		<result property="mno" column="MAPNO"/>
		<result property="latitude" column="LATITUDE"/>
		<result property="longitude" column="LONGITUDE"/>
	</resultMap>

	<!-- 로그인 -->
	<select id="login" parameterType="UserDto" resultMap="userinfo">
		SELECT	*
		FROM 	USERINFO
		WHERE 	USEREMAIL=#{useremail} 
		AND 	USERPW=#{userpw} 
		AND 	USERENABLED='Y'
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="select_userpw" parameterType="String" resultType="String">
		SELECT 	USERPW 
		FROM 	USERINFO 
		WHERE 	USEREMAIL=#{useremail}
	</select>
	
	<!-- 이메일로 회원 찾기 -->
	<select id="select_user" parameterType="String" resultMap="userinfo">
		SELECT	*
		FROM 	USERINFO
		WHERE 	USEREMAIL=#{useremail}
	</select>
	
	<!-- API 로그인시, 고유번호 찾기 -->
	<select id="select_user_by_api" parameterType="Double" resultMap="userinfo">
		SELECT	*
		FROM 	USERINFO
		WHERE 	USERNO=#{userno}
	</select>
	
	<!-- 검색 유저의 프로젝트 중 가장 번호가 작은 프로젝트 검색 -->
	<select id="select_project_default" parameterType="UserDto" resultMap="project">
	
		SELECT  A.*
		FROM    (
            SELECT  *
            FROM    PROJECT
            ORDER BY PROJECTNO) A 
        INNER JOIN PROJECT_CREATE B
		ON      A.PROJECTNO = B.PROJECTNO
		INNER JOIN  USERINFO C
		ON      B.USERNO = C.USERNO
		WHERE   C.USERNO = #{userno}
		AND     ROWNUM = 1
	
	</select>
	
	<!-- 검색 유저의 프로젝트 목록 조회 -->
	<select id="select_project_list" parameterType="UserDto" resultMap="project">
	
		SELECT  B.*
		FROM    PROJECT_CREATE A INNER JOIN PROJECT B
		ON      A.PROJECTNO = B.PROJECTNO
		WHERE   USERNO = #{userno}
		
	</select>
	
	<!-- 프로젝트에 속한 유저 조회 -->	
	<select id="select_project_user_list" parameterType="ProjectDto" resultMap="userinfo">
		
		SELECT	B.*
		FROM	PROJECT_CREATE A INNER JOIN USERINFO B
		ON		A.USERNO = B.USERNO
		WHERE	PROJECTNO = #{pno}
		
	</select>
	
	<!-- 검색 유저, 프로젝트에 속한 채널 조회 -->
	<select id="select_channel_list" parameterType="Channel_CreateDto" resultMap="channel">
		SELECT  A.*
		FROM    CHANNEL A INNER JOIN CHANNEL_CREATE B
		ON      A.CHANNELNO = B.CHANNELNO
		WHERE   B.USERNO = #{userno}
		AND		B.PROJECTNO = #{pno}
	</select>
	
	<!-- 검색 채널에 속한 유저 조회 -->
	<select id="select_channel_user_list" parameterType="ChannelDto" resultMap="userinfo">
	SELECT  C.*
	FROM    CHANNEL A INNER JOIN CHANNEL_CREATE B
	ON      A.CHANNELNO = B.CHANNELNO
    		INNER JOIN USERINFO C
	ON      B.USERNO = C.USERNO
	WHERE   A.CHANNELNO = #{cno}
	</select>
	
	<!-- 맵 객체 조회 -->
	<select id="select_map" parameterType="MapDto" resultMap="map">
	
		SELECT * FROM MAPS WHERE #{mno}
		
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="update_userinfo" parameterType="UserDto">
		UPDATE 	USERINFO
		SET 	USEREMAIL=#{useremail}
				,USERPW=#{userpw}
				,USERNAME=#{username}
				,USERGENDER=#{usergender}
		WHERE 	USERNO=#{userno}
	</update>
	
	<!-- 회원가입 -->
	<insert id="insert_user" parameterType="UserDto">
		INSERT INTO USERINFO(USERNO,USEREMAIL ,USERPW ,USERNAME ,USERGENDER ,USERENABLED ,USERROLE ,USERURL)
		VALUES( 
		<choose>
 			<when test="userno != null">
 				#{userno}
 			</when>
 			<otherwise>
 				USERNOSEQ.NEXTVAL
 			</otherwise>
 		</choose>
		,#{useremail}
		,#{userpw} 
		,#{username}
		<!-- API를 통한 회원가입시 성별을 NULL로 설정한다. -->
		<choose>
 			<when test="usergender != null">
 				,#{usergender}
 			</when>
 			<otherwise>
 				,NULL
 			</otherwise>
 		</choose>
		,'Y'
		,'2'
		<choose>
 			<when test="userurl != null">
 				,#{userurl}
 			</when>
 			<otherwise>
 				,'resources/image/profile/basic.jpg'
 			</otherwise>
 		</choose>
		)
	</insert>
	
	<!-- 프로젝트 테이블 생성 -->
	<insert id="insert_project" parameterType="ProjectDto">

  		INSERT INTO PROJECT
		VALUES(
				PROJECTNOSEQ.NEXTVAL
				,#{pname}
				,#{purl}
		)
		<selectKey keyProperty="pno" resultType="int" order="AFTER">
   			SELECT PROJECTNOSEQ.CURRVAL FROM DUAL
  		</selectKey>
  		
				
	</insert>
	
	<!-- 프로젝트 참여 테이블 생성 -->
	<insert id="insert_project_create" parameterType="Project_CreateDto">

 		INSERT INTO PROJECT_CREATE 
 		VALUES( 
 				PROJECT_CREATENOSEQ.NEXTVAL
 				,#{userno}
 				,#{pno}
 				)
				
	</insert>
	
	<!-- 채널 테이블 생성 -->
	<insert id="insert_channel" parameterType="ChannelDto">

 		INSERT INTO CHANNEL
 		VALUES( 
 				CHANNELNOSEQ.NEXTVAL
 				
 		<!-- MyBatis 동적쿼리 IF문 사용방법
 		
 		EX) 잘못된 예
 		<if test="#{cname} != null"></if>
 		
 		EX) 같은 문자를 비교하는 방법
 		1. <if test="cname != null and (cname eq "test".toString())"> </if>
 		2. <if test="cname != null and cname.equals("test")></if>
 		EX) 대소문자 관계없이 비교하는 방법
 		3. <if test="cname != null and cname.equalsIgnoreCase("test")"></if>
 		비교할 스트링 값을 "" (double quote)로 묶어주는게 좋다.
 		 -->
 		<choose>
 			<when test="cname != null">
 				,#{cname}
 			</when>
 			<otherwise>
 				,'MAIN'
 			</otherwise>
 		</choose>
 		 		,SYSDATE
 				,'OFF'
 				)
 		
 		<selectKey  keyProperty="cno" resultType="int" order="AFTER">
   			SELECT 	CHANNELNOSEQ.CURRVAL
   			FROM	DUAL
  		</selectKey>
				
	</insert>
	
	<!-- 채널 참여 테이블 생성 -->
	<insert id="insert_channel_create" parameterType="Channel_CreateDto">

 		INSERT INTO CHANNEL_CREATE
 		VALUES( 
 				CHANNEL_CREATENOSEQ.NEXTVAL
 				,#{userno}
 				,#{cno}
 				,#{pno}
 				)
				
	</insert>
	
	<!-- 맵 테이블 생성 -->
	<insert id="insert_map" parameterType="MapDto">
	
		INSERT INTO MAPS
		VALUES(
			MAPNOSEQ.NEXTVAL,
			#{latitude},
			#{longitude}
		)
		
		<selectKey  keyProperty="mno" resultType="int" order="AFTER">
   			SELECT 	MAPNOSEQ.CURRVAL
   			FROM	DUAL
  		</selectKey>
		
	</insert>
	
	<!-- 텍스트 테이블 생성 -->
	<insert id="insert_text">
	
		<selectKey  keyProperty="tno" resultType="int" order="BEFORE">
   			SELECT 	MAPNOSEQ.NEXTVAL
   			FROM	DUAL
  		</selectKey>
	
		INSERT INTO TEXT(TEXTNO, USERNO, CHANNELNO, ANSWERSQ, TEXTCONTENT, TEXTTIME, MAPNO, FILENO)
		VALUES (
			#{tno}
			,#{userno}
			,#{cno}
		<choose>
 			<when test="answersq != 0">
 				,#{answersq}
 			</when>
 			<otherwise>
 				,0
 			</otherwise>
 		</choose>
 		<choose>
 			<when test="tcontent != null">
 				,#{tcontent}
 			</when>
 			<otherwise>
 				,NULL
 			</otherwise>
 		</choose>
 		,SYSDATE
 		<choose>
 			<when test="mno != 0">
 				,#{mno}
 			</when>
 			<otherwise>
 				,NULL
 			</otherwise>
 		</choose>
 		<choose>
 			<when test="fno != 0">
 				,#{fno}
 			</when>
 			<otherwise>
 				,NULL
 			</otherwise>
 		</choose>
		)
	
	</insert>

<!-- 게시판 관련 기능 start -->
   <!-- 게시판dto -->
   <resultMap type="ChatBoardDto" id="ChatBoardDto">
      <result property="boardno" column="BOARDNO"/>
      <result property="userno" column="USERNO"/>
      <result property="projectno" column="PROJECTNO"/>
      <result property="boardtitle" column="BOARDTITLE"/>
      <result property="boardcontent" column="BOARDCONTENT"/>
      <result property="delflag" column="DELFLAG"/>
      <result property="regdate" column="REGDATE"/>
      <result property="mapno" column="MAPNO"/>
      <result property="fileno" column="FILENO"/>
   </resultMap>
   
   <!-- 파일dto -->
   <resultMap type="FileDBDto" id="FileDBDto">
      <result property="fileno" column="FILENO"/>
      <result property="files" column="FILESTREAM"/>
      <result property="filetitle" column="FILETITLE"/>
   </resultMap>
   
   <!-- 게시판 전체출력 -->
   <select id="selectprojectno" resultType="ChatBoardDto">
      SELECT BOARDNO, USERNO, BOARDTITLE, BOARDCONTENT, REGDATE, MAPNO, FILENO FROM BOARD WHERE DELFLAG='N' AND PROJECTNO = #{projectno}
   </select>
   
   <!-- 게시판 페이지 번호 출력 -->
   <select id="selectcountall" parameterType="int" resultType="int">
      SELECT COUNT(BOARDNO) FILENO FROM BOARD WHERE PROJECTNO = #{projectno}
   </select>
   
   <!-- 게시판 내 게시물 10개 출력 -->
   <select id="selectten" resultType="ChatBoardDto" parameterType="ChatBoardDto">
	SELECT rn, BOARDNO, USERNO, BOARDTITLE, BOARDCONTENT, REGDATE, MAPNO, FILENO FROM 
	(SELECT ROWNUM as rn, BOARDNO, USERNO, BOARDTITLE, BOARDCONTENT, REGDATE, MAPNO, FILENO FROM BOARD WHERE DELFLAG = 'N' AND PROJECTNO = #{projectno}
	ORDER BY BOARDNO) WHERE rn BETWEEN 
	(SELECT GREATEST(MAX(rn)-(#{boardno}*10)+1,1) FROM (SELECT ROWNUM as rn FROM BOARD WHERE DELFLAG = 'N' AND PROJECTNO = #{projectno})) 
	AND (SELECT MAX(rn)-(#{boardno}-1)*10 FROM (SELECT ROWNUM as rn FROM BOARD WHERE DELFLAG = 'N' AND PROJECTNO = #{projectno}))
	ORDER BY rn DESC
   </select>
   
    <!-- 게시판 페이지 번호 검색 -->
    <select id="searchcountall" parameterType="ChatBoardDto" resultType="int">
      SELECT COUNT(BOARDNO) FILENO FROM BOARD WHERE PROJECTNO = #{projectno} AND BOARDCONTENT = #{boardcontent}
   </select>
   
   <!-- 게시판 내 게시물 10개 검색 -->
   <select id="searchten" resultType="ChatBoardDto" parameterType="ChatBoardDto">
	SELECT rn, BOARDNO, USERNO, BOARDTITLE, BOARDCONTENT, REGDATE, MAPNO, FILENO FROM 
	(SELECT ROWNUM as rn, BOARDNO, USERNO, BOARDTITLE, BOARDCONTENT, REGDATE, MAPNO, FILENO FROM BOARD WHERE DELFLAG = 'N' AND PROJECTNO = #{projectno}
	AND BOARDCONTENT LIKE #{boardcontent} ORDER BY BOARDNO) WHERE rn BETWEEN
	(SELECT GREATEST(MAX(rn)-(#{boardno}*10)+1,1) FROM (SELECT ROWNUM as rn FROM BOARD WHERE DELFLAG = 'N' AND PROJECTNO = #{projectno} AND BOARDCONTENT LIKE #{boardcontent})) 
	AND (SELECT MAX(rn)-(#{boardno}-1)*10 FROM (SELECT ROWNUM as rn FROM BOARD WHERE DELFLAG = 'N' AND PROJECTNO = #{projectno} AND BOARDCONTENT LIKE #{boardcontent}))
	ORDER BY rn DESC
   </select>
   
   <!-- 게시물 1개 출력 -->
   <select id="selectBoardone" resultType="ChatBoardDto">   
      SELECT USERNO, BOARDTITLE, BOARDCONTENT, REGDATE, FILENO FROM BOARD WHERE DELFLAG='N' AND BOARDNO = #{boardno}
   </select>
   
   <!-- 게시물 입력 -->
   <insert id="writeBoard" parameterType="ChatBoardDto">
      INSERT INTO BOARD VALUES(BOARDNOSEQ.NEXTVAL, #{userno}, 1, #{title},  #{boardcontent}, 'N', SYSDATE, null, #{fileno})
   </insert>
   
   <!-- 게시물 삭제 -->
   <update id="multiDelete" parameterType="map">
      UPDATE BOARD SET DELFLAG = 'Y' WHERE BOARDTITLE IN <foreach collection="boardnos" item="boardno" open="(" separator="," close=")">#{boardno}</foreach>
   </update>
   
   <!-- 파일정보 입력 -->
   <insert id="writeBoardfile" parameterType="FileDBDto">
      INSERT INTO FILES VALUES(FILENOSEQ.NEXTVAL, #{files},#{filetitle})
   </insert>
   
   <!-- 가장 최신에 업데이트 된 파일 선택 -->
   <select id="selectBoardfileno" resultType="int">
      SELECT MAX(FILENO) FROM FILES
   </select>
   
   <select id="selectBoardfileone" resultType="FileDBDto">
      SELECT FILETITLE FROM FILES WHERE FILENO = #{fileno}
   </select>
   
</mapper>
